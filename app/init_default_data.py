"""
M√≥dulo para criar dados padr√£o: conta Mem√≥riaViva e comunidade oficial
"""
from .models import db, Usuario, Community

def create_default_account_and_community():
    """
    Cria a conta oficial Mem√≥riaViva e a comunidade padr√£o
    """
    try:
        # Verificar se a conta Mem√≥riaViva j√° existe
        memoria_viva_user = Usuario.query.filter_by(email='memoriaviva@oficial').first()
        
        if not memoria_viva_user:
            print("üìù Criando conta oficial Mem√≥riaViva...")
            memoria_viva_user = Usuario(
                nome='Mem√≥riaViva',
                email='memoriaviva@oficial',
                is_admin=True  # Conta oficial √© administradora
            )
            memoria_viva_user.senha = 'memoriaviva123'  # Usa o setter que gera hash
            db.session.add(memoria_viva_user)
            db.session.commit()
            print("‚úÖ Conta Mem√≥riaViva criada com sucesso!")
        else:
            print("‚úì Conta Mem√≥riaViva j√° existe")
        
        # Verificar se a comunidade Mem√≥riaViva j√° existe
        memoria_viva_community = Community.query.filter_by(name='Mem√≥riaViva').first()
        
        if not memoria_viva_community:
            print("üìù Criando comunidade oficial Mem√≥riaViva...")
            memoria_viva_community = Community(
                owner_id=memoria_viva_user.id,
                name='Mem√≥riaViva',
                description='Comunidade oficial do Mem√≥riaViva. Participe das discuss√µes sobre acervos, tradi√ß√µes e cultura popular!',
                status='active',
                is_filtered=False
            )
            db.session.add(memoria_viva_community)
            db.session.commit()
            print("‚úÖ Comunidade Mem√≥riaViva criada com sucesso!")
        else:
            print("‚úì Comunidade Mem√≥riaViva j√° existe")
            
    except Exception as e:
        print(f"‚ùå Erro ao criar dados padr√£o: {e}")
        db.session.rollback()
        raise
